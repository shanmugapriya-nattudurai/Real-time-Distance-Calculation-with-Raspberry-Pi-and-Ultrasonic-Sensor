DistanceMapper: Real-time Distance Calculation with Raspberry Pi and Ultrasonic Sensor
Project Overview
DistanceMapper is an innovative project that uses a Raspberry Pi and an ultrasonic sensor to measure distances in real-time and map the data dynamically into an Excel spreadsheet. This project aims to provide a practical application of distance measurement and data logging, which can be used in various fields such as robotics, automation, and environmental monitoring.

Features
Real-time Distance Measurement: Utilizes an ultrasonic sensor to measure distances accurately.
Raspberry Pi Integration: Harnesses the power of Raspberry Pi for processing and data management.
Dynamic Data Logging: Captures and logs data in real-time, storing it in an Excel spreadsheet.
Data Visualization: Provides a clear and organized view of the collected data for analysis.
Versatile Application: Can be adapted for various use cases such as obstacle detection, level measurement, and environmental monitoring.
Components
Raspberry Pi: The main processing unit for running the code and managing data.
Ultrasonic Sensor (HC-SR04): Measures the distance to objects by emitting ultrasonic waves and calculating the time it takes for the echo to return.
Excel: Used for logging and visualizing the distance data in a structured manner.
Prerequisites
Hardware:
Raspberry Pi (any model with GPIO pins)
Ultrasonic Sensor (HC-SR04)
Jumper wires
Breadboard (optional)
Software:
Python
openpyxl library (for Excel manipulation)
RPi.GPIO library (for Raspberry Pi GPIO control)
Installation
Set up Raspberry Pi:

Install the latest Raspbian OS on your Raspberry Pi.
Connect the Raspberry Pi to the internet.
Connect the Ultrasonic Sensor:

Connect the VCC pin of the sensor to the 5V pin of the Raspberry Pi.
Connect the GND pin of the sensor to a GND pin of the Raspberry Pi.
Connect the TRIG pin of the sensor to a GPIO pin (e.g., GPIO23).
Connect the ECHO pin of the sensor to another GPIO pin (e.g., GPIO24).
Install Python Libraries:

bash
Copy code
sudo apt-get update
sudo apt-get install python3-pip
pip3 install openpyxl RPi.GPIO
Usage
Clone the Repository:

bash
Copy code
git clone https://github.com/yourusername/DistanceMapper.git
cd DistanceMapper
Run the Script:

bash
Copy code
python3 distance_mapper.py
View the Data:

Open the generated Excel file to view the logged distance measurements.
Code Explanation
distance_mapper.py: The main script that initializes the ultrasonic sensor, captures distance measurements, and logs the data into an Excel file.
setup(): Configures the GPIO pins.
measure_distance(): Measures the distance using the ultrasonic sensor.
log_data(): Logs the measured distance into the Excel file.
main(): Main function that runs the distance measurement and logging loop.
Contributing
Fork the repository.
Create a new branch (e.g., feature-new).
Commit your changes.
Push to the branch.
Create a pull request.
License
This project is licensed under the MIT License - see the LICENSE file for details.


Contact
For questions or suggestions, please open an issue or contact me at n.shanmugapriya2005@gmail.com






